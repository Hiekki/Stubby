// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Guild {
  id        Int      @id @default(autoincrement())
  guildID   String   @unique
  guildName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tickets Tickets[] @relation("GuildTickets")
}

model Tickets {
  id          String   @id @unique
  guildID     String
  channelID   String
  title       String
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  guild      Guild        @relation("GuildTickets", fields: [guildID], references: [guildID], onDelete: Cascade)
  categories Categories[] @relation("Categories")
  threads    Threads[]    @relation("Threads")
}

model Categories {
  id             Int      @id @default(autoincrement())
  messageID      String
  label          String
  description    String
  role_one       String
  role_two       String?
  role_three     String?
  emoji          String?
  custom_message String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  ticket  Tickets   @relation("Categories", fields: [messageID], references: [id], onDelete: Cascade)
  threads Threads[] @relation("CategoryThreads")
}

model Threads {
  id         String   @id @unique
  ticketID   String
  userID     String
  channelID  String
  categoryID Int
  closed     Boolean  @default(false)
  locked     Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  ticket   Tickets    @relation("Threads", fields: [ticketID], references: [id], onDelete: Cascade)
  category Categories @relation("CategoryThreads", fields: [categoryID], references: [id], onDelete: Cascade)
}
